OPENAI_API_KEY=""

# Google Cloud Vertex AI Configuration
GCP_PROJECT=""
GCP_LOCATION="us-central1" # Optional: Change if your Vertex AI resources are elsewhere

# For Heroku Deployment (or similar environments where placing a key file is difficult):
# Store the *entire content* of your downloaded GCP service account JSON key here.
# The Procfile will write this to /tmp/gcp-key.json at runtime.
GCP_SA_KEY_JSON=""

# The GOOGLE_APPLICATION_CREDENTIALS variable will be set automatically by the Procfile
# to point to /tmp/gcp-key.json when deploying to Heroku.
# For local development, you can either:
# 1. Set GCP_SA_KEY_JSON and run with the Heroku Procfile command (e.g., using `heroku local`).
# 2. Download the key file, save it securely (e.g., outside the repo), and set:
#    GOOGLE_APPLICATION_CREDENTIALS="/path/to/your/secure/keyfile.json"
# 3. Run `gcloud auth application-default login` in your local terminal.

# Google OAuth Credentials
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# Facebook OAuth Credentials
FACEBOOK_CLIENT_ID=""
FACEBOOK_CLIENT_SECRET=""

# Email Server Configuration (e.g., MailerSend, SendGrid)
EMAIL_SERVER_HOST=""
EMAIL_SERVER_PORT=""
EMAIL_USE_TLS="" # Typically "true" or "false"
EMAIL_USERNAME=""
EMAIL_PASSWORD=""

# NextAuth Configuration
NEXTAUTH_SECRET="" # Generate a strong secret: openssl rand -base64 32
NEXTAUTH_URL="" # Your application's base URL (e.g., http://localhost:3000 or https://yourdomain.com)

# Next.js Public Base URL
NEXT_PUBLIC_BASE_URL="" # Your application's public base URL (same as NEXTAUTH_URL usually)

# Database Connection URL
DATABASE_URL="" # Example: postgresql://user:password@host:port/database?schema=public